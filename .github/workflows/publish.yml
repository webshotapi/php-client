name: Create GitHub Release

on:
  push:
    tags:
      - 'v*'  # Triggers only when a tag like v1.0.0 is pushed

jobs:
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure full history is fetched

      - name: Get Previous Tag
        id: prev_tag
        run: |
          PREV_TAG=$(git describe --tags --abbrev=0 --exclude=$(git describe --tags))
          echo "Previous tag: $PREV_TAG"
          echo "PREV_TAG=$PREV_TAG" >> $GITHUB_ENV

      - name: Generate Release Notes with GitHub Logins
        id: release_notes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          REPO_URL="https://github.com/${{ github.repository }}"
          RELEASE_BODY="## âœ¨ What's New in ${{ github.ref_name }}\n\n### ðŸ”¥ Changes\n"

          if [ -z "$PREV_TAG" ]; then
            RELEASE_BODY="ðŸš€ **First Release!**\n\nðŸŽ‰ Welcome to the first official release of this project!"
          else
            COMMITS=$(git log $PREV_TAG..HEAD --pretty=format:"%H" --reverse)

            for COMMIT in $COMMITS; do
              MESSAGE=$(git log -1 --pretty=format:"%s" $COMMIT)
              COMMIT_EMAIL=$(git log -1 --pretty=format:"%ae" $COMMIT)

              # Fetch GitHub username from commit's email
              AUTHOR=$(curl -s -H "Authorization: token $GH_TOKEN" \
                          "https://api.github.com/search/users?q=$COMMIT_EMAIL+in:email" \
                          | jq -r '.items[0].login' || echo "unknown")

              # Add commit message with clickable link
              RELEASE_BODY+=" - ðŸ”¹ [\`${COMMIT:0:7}\`]($REPO_URL/commit/$COMMIT) $MESSAGE by **[@$AUTHOR]($REPO_URL/commits?author=$AUTHOR)**\n"
            done

            RELEASE_BODY+="\nðŸ’¡ _Full commit history [here]($REPO_URL/compare/$PREV_TAG...${{ github.ref_name }})_"
          fi

          # Ensure the body is treated as Markdown
          echo "RELEASE_BODY<<EOF" >> $GITHUB_ENV
          echo "$RELEASE_BODY" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          body: "${{ env.RELEASE_BODY }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
