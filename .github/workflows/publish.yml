name: Create GitHub Release

on:
  push:
    tags:
      - 'v*'  # Triggers only when a tag like v1.0.0 is pushed

jobs:
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Remove optional "v" prefix
        id: version
        run: |
          echo "version=${VERSION#v}" >> "$GITHUB_OUTPUT"
        env:
          VERSION: ${{ inputs.version }}

      - name: Check if branch and version match
        id: guard
        run: |
          MAJOR_VERSION="${NUMERIC_VERSION%%.*}"
          BRANCH_MAJOR_VERSION="${BRANCH%%.*}"

          if [ "$MAJOR_VERSION" != "$BRANCH_MAJOR_VERSION" ]; then
            echo "Mismatched versions! Aborting."
            VERSION_MISMATCH='true';
          else
            echo "Versions match! Proceeding."
            VERSION_MISMATCH='false';
          fi

          echo "VERSION_MISMATCH=$(echo $VERSION_MISMATCH)" >> "$GITHUB_OUTPUT";
        env:
          BRANCH: ${{ github.ref_name }}
          NUMERIC_VERSION: ${{ steps.version.outputs.version }}

      - name: Fail if branch and release tag do not match
        if: ${{ steps.guard.outputs.VERSION_MISMATCH == 'true' }}
        uses: actions/github-script@v7
        with:
          script: |
              core.setFailed('Workflow failed. Release version does not match with selected target branch. Did you select the correct branch?')

      - name: Generate release notes
        id: generated-notes
        uses: RedCrafter07/release-notes-action@main
        with:
          tag-name: v${{ steps.version.outputs.version }}
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref_name }}

      - name: Cleanup release notes
        id: cleaned-notes
        run: |
          START_FROM=$(echo -n "$RELEASE_NOTES" | awk "/What's Changed/{ print NR; exit }" -)
          DROP_FROM_CONTRIBUTORS=$(echo -n "$RELEASE_NOTES" | awk "/New Contributors/{ print NR; exit }" -)
          DROP_FROM_FULL_CHANGELOG=$(echo -n "$RELEASE_NOTES" | awk "/Full Changelog/{ print NR; exit }" -)

          # Drop everything starting from "Full Changelog"
          if [ ! -z "$DROP_FROM_FULL_CHANGELOG" ]; then
              RELEASE_NOTES=$(echo -n "$RELEASE_NOTES" | sed "${DROP_FROM_FULL_CHANGELOG},$ d")
          fi

          # Drop everything starting from "New Contributors"
          if [ ! -z "$DROP_FROM_CONTRIBUTORS" ]; then
              RELEASE_NOTES=$(echo -n "$RELEASE_NOTES" | sed "${DROP_FROM_CONTRIBUTORS},$ d")
          fi

          # Drop the line "What's Changed"
          if [ ! -z "$START_FROM" ]; then
              RELEASE_NOTES=$(echo -n "$RELEASE_NOTES" | sed "${START_FROM}d")
          fi

          {
            echo 'notes<<EOF'
            echo "$RELEASE_NOTES"
            echo EOF
          } >> "$GITHUB_OUTPUT";
        env:
          RELEASE_NOTES: ${{ steps.generated-notes.outputs.release-notes }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: v${{ steps.version.outputs.version }}
          body:  ${{ steps.cleaned-notes.outputs.notes }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
